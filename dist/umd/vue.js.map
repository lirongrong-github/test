{"version":3,"file":"vue.js","sources":["../../src/observe/array.js","../../src/util/index.js","../../src/observe/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 会导致数据本身发生变化得方法 push shift unshift pop reverse sort splice\r\n\r\n// 而 slice 并不会导致数组本身得变化 所以不需要重写\r\n\r\n// 保留数组原生得方法\r\nlet oldArrayMethods = Array.prototype\r\n\r\n// 原型链查找\r\n//   -- 意思就是 用户通过使用数组方法时会先通过 __proto__ \r\n//   查找arrayMethods上面挂载得方法 ，如果说找不到我们重写得方法\r\n//   就会去oldArrayMethods 上面查找上面保留得原生数组得方法\r\n//   但是这里能改变数据本身得方法都被重写了， 所以只有不会改变数组本身得方法会到oldArrayMethods上去\r\n\r\n// ***** 原型链得查找会依次向上查找 先查找重写得， 重写得没有会继续向上查找\r\n\r\n// value.__proto__ = arrayMathods\r\n// arrayMethosd.__proto__ = oldArrayMethods\r\nexport let arrayMethods = Object.create(oldArrayMethods)\r\n\r\nconst methods = [\r\n\r\n  'push',\r\n  'shift',\r\n  'unshift',\r\n  'pop',\r\n  'sort',\r\n  'reverse',\r\n  'splice'\r\n\r\n]\r\n\r\nmethods.forEach( method => {\r\n\r\n  arrayMethods[method] = function (...args) {\r\n    \r\n    // AOP 切片编程\r\n    // 在这里还需要调用原生数组得方法\r\n    const result =  oldArrayMethods[method].apply( this, args )\r\n\r\n    // push unshift 添加得元素可能为一个对象\r\n    let inserted,\r\n        ob = this.__ob__\r\n\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        console.log(12)\r\n        inserted = args\r\n        break\r\n      \r\n      case 'splice':\r\n        inserted = args.splice(2)\r\n\r\n      default:\r\n        break\r\n    }\r\n\r\n    if ( inserted ) ob.observeArray(inserted)\r\n\r\n    return result\r\n\r\n  }\r\n\r\n})","/** \r\n * @param {*} data 当前数据是不是对象\r\n */\r\nconst isObject = function(data) {\r\n\r\n  return typeof data === \"object\" && data !== null\r\n\r\n}\r\n\r\nconst def = function ( data, key, value) {\r\n  \r\n  Object.defineProperty( data, key, {\r\n\r\n    enumerable: false,\r\n    configurable: false,\r\n    value: value\r\n\r\n  })\r\n\r\n}\r\n\r\nexport {\r\n\r\n  isObject,\r\n  def\r\n\r\n}","import { arrayMethods } from \"./array.js\"\r\n\r\nimport { isObject, def } from \"../util/index\"\r\n\r\nclass ObServer {\r\n\r\n  constructor ( value ) {\r\n\r\n    def( value, \"__ob__\", this )\r\n\r\n    // 如果是数组的话并不想去监听数组得索引，会导致性能问题\r\n    // push shift unshift 可以操作数组 所以需要重写\r\n    value.__proto__ = arrayMethods // 在用户调用数组得原生方法时就是走这里， 相当于代理/装饰\r\n\r\n    // 如果数组里面放的是对象， 才会进行观测\r\n    if ( Array.isArray(value) ) {\r\n      \r\n      this.observeArray(value)\r\n\r\n    } else {\r\n\r\n      this.walk(value)\r\n\r\n    }\r\n\r\n  }\r\n\r\n  walk ( data ) {\r\n\r\n    // Object.keys 获取对象得key\r\n    let keys = Object.keys(data) // [\"name\", \"age\", \"sex\", \"adreess\"]\r\n\r\n    // for( let i = 0; i < keys.length; i++ ) {\r\n\r\n    //   let key = keys[i]\r\n    //   let value = data[key]\r\n    //   defineReactive(data, key, value) // 定义响应式数据\r\n\r\n    // }\r\n\r\n    keys.forEach( item => {\r\n\r\n      defineReactive( data, item, data[item] )\r\n\r\n    })\r\n\r\n  }\r\n\r\n  observeArray ( value ) {\r\n\r\n    value.forEach( item => {\r\n      \r\n      // [{},{},{}] -- 判断了是不是对象在进行观测， 不是对象则不观测\r\n      observe(item)\r\n\r\n    })\r\n\r\n  }\r\n\r\n}\r\n\r\nfunction defineReactive( data, key, value ) {\r\n\r\n  observe(value) // 递归实现深度检测\r\n\r\n  Object.defineProperty( data, key, {\r\n\r\n    // 在获取值得时候可操作\r\n    get () {\r\n      return value\r\n    },\r\n\r\n    // 在设置值是可操作\r\n    set (newValue) {\r\n\r\n      if ( newValue === value ) return\r\n\r\n      // console.log( '值发生变化' )\r\n\r\n      // 如果用户修改得值为一个对象\r\n      //    再次调用observe 进行数据观测\r\n      observe(newValue)\r\n\r\n      value = newValue\r\n\r\n    }\r\n\r\n  } )  \r\n\r\n}\r\n\r\nexport function observe(data) {\r\n\r\n  // 判断data 是不是一个对象\r\n  let isObj = isObject(data)\r\n\r\n  if (!isObj) return\r\n\r\n  return new ObServer(data)\r\n\r\n}","import { observe } from './observe/index.js'\r\n\r\nexport function initState(vm) {\r\n\r\n  const opts = vm.$options\r\n\r\n  if ( opts.props )\r\n\r\n    initProps(vm)\r\n\r\n  if ( opts.methods )\r\n\r\n    initMethods(vm)\r\n\r\n  if ( opts.data )\r\n\r\n    initData(vm)\r\n\r\n  if ( opts.computed )\r\n\r\n    initComputed(vm)\r\n\r\n  if ( opts.watch )\r\n\r\n    initWatch(vm)\r\n\r\n}\r\n\r\nfunction initProps() {\r\n\r\n\r\n}\r\n\r\nfunction initMethods() {\r\n\r\n  \r\n}\r\n\r\nfunction initData(vm) {\r\n\r\n  // 数据得初始化操作\r\n  let data = vm.$options.data // 用户传递得data\r\n\r\n  // 把data 赋值到实例得_data上 允许用户通过_data修改\r\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n  // 对象劫持 用户改变了数据 我需要得到通知 ==> 刷新页面\r\n  // mvvm 数据变化可以驱动视图变化\r\n\r\n  // Object.defineProperty() 给对象增加 get() set()\r\n  observe(data) // 响应式原理\r\n  \r\n}\r\n\r\nfunction initComputed() {\r\n\r\n  \r\n}\r\n\r\nfunction initWatch() {\r\n\r\n  \r\n}","import { initState } from \"./state.js\"\r\n\r\n// Vue.prototype._init = function() {\r\n\r\n\r\n  \r\n// }\r\n\r\n// 再原型上添加一个init方法\r\nexport function initMixin(Vue) {\r\n\r\n  // 初始化流程\r\n  Vue.prototype._init = function(options) {\r\n\r\n    // 数据得劫持\r\n    const vm = this\r\n    vm.$options = options\r\n\r\n    initState(vm)\r\n\r\n  \r\n  }\r\n\r\n}","// 只是Vue得一个声明\r\n\r\nimport { initMixin } from './init'\r\n\r\n// vue 核心代码\r\nfunction Vue(options) {\r\n\r\n  // 进行Vue初始化操作\r\n  this._init(options)\r\n\r\n}\r\n\r\n// Vue.prototype._init = function() {\r\n\r\n\r\n// }\r\n\r\ninitMixin(Vue)\r\n\r\n// 通过引入文件得方式, 给Vue原型上添加方法\r\n\r\nexport default Vue"],"names":["oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","console","log","splice","observeArray","isObject","data","def","key","value","defineProperty","enumerable","configurable","ObServer","__proto__","isArray","walk","keys","item","defineReactive","observe","get","set","newValue","isObj","initState","vm","opts","$options","props","initProps","initMethods","initData","computed","initComputed","watch","initWatch","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}